name: Staging

on:
  push:
    branches: [
      "staging",
    ]

permissions:
  contents: read

jobs:
  staging:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      #- name: Validate composer.json and composer.lock
      #  run: composer validate --strict

      - name: security check
        run: composer audit

      - name: prepare env
        run: |
          sed -i "s/^MYSQL_PASSWORD=[^ ]*/MYSQL_PASSWORD=${{secrets.STAGING_MYSQL_PASSWORD}}/" .env.staging
          cp .env.staging .env

      - name: Install dependencies
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{secrets.COMPOSER_AUTH}}"} }'
        run: composer install --no-interaction --no-dev --optimize-autoloader --prefer-dist --no-scripts

      # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
      # Docs: https://getcomposer.org/doc/articles/scripts.md

      - name: rsync deployment
        env:
          dest: '/var/www/demo_staging'
        run: |
          echo "::group::Prepare Certificate"
          echo "${{vars.STAGING_SSH_USER}}"
          echo "${{vars.STAGING_SSH_HOST}}"
          echo "${{secrets.STAGING_SSH_OPENSSH_KEY}}" > id_ed25519
          chmod 600 ./id_ed25519

          echo "::group::Deploy"
          rsync -avz --delete --rsync-path="sudo rsync" -e 'ssh -i ./id_ed25519 -o StrictHostKeyChecking=no' --exclude /id_ed25519 --exclude /.git/ --exclude /.github/ ./ ${{vars.STAGING_SSH_USER}}@${{vars.STAGING_SSH_HOST}}:${{env.dest}}

          echo "::group::Migrations"
          ssh -i ./id_ed25519 ${{vars.STAGING_SSH_USER}}@${{vars.STAGING_SSH_HOST}} "sudo chmod a+rw -R ${{env.dest}}; cd ${{env.dest}}; sudo chmod a+x ./yii; ./yii migrate"
